#
# This is GNU makefile for Windows OS and Visual C++ compiler
#

# Default shell used by GNU Make on Windows
SHELL = cmd

# C++ compiler
CXX = cl /std:c++14

# C++ compiler flags
CXXFLAGS = /nologo /EHsc /W4 /WX /Zc:__cplusplus /I ..\include /I include /Od /Zi /bigobj

# Set to 1 to execute (run) tests silently
SILENT = 0

ifeq ($(SILENT),0)
	TO_NULL_IF_SILENT =
else
	TO_NULL_IF_SILENT = > nul 2>&1
endif

# Function: Resursive wildcard
# Usage: $(call rwildcard,dir,pattern)
rwildcard = $(foreach d,$(wildcard $(1:=/*)),$(call rwildcard,$d,$2) $(filter $(subst *,%,$2),$d))

# Source directory
SRC_DIR := .\src

# List of all source files that must be compiled and tested
SRCS := $(foreach path,$(call rwildcard,$(SRC_DIR),*.cpp),$(subst /,\,$(path)))

# Build directory
BUILD_DIR := .\build

# First rule
.PHONY: check
check:

# This function generates "check" rule for given source file.
# Usage: $(call generate_rules,source_file)
define generate_rules

.PHONY: check_$(basename $(notdir $(1)))
check:  check_$(basename $(notdir $(1)))
check_$(basename $(notdir $(1))):
	if not exist "$(BUILD_DIR)\$(dir $(1))" mkdir "$(BUILD_DIR)\$(dir $(1))"
	$(CXX) $(CXXFLAGS) $(1) /Fe:$(BUILD_DIR)\$(basename $(1)).exe \
		                    /Fo:$(BUILD_DIR)\$(basename $(1)).obj \
		                    /Fd:$(BUILD_DIR)\$(basename $(1)).pdb
	$(BUILD_DIR)\$(basename $(1)).exe $(TO_NULL_IF_SILENT)

endef

# Generate rules for all source files
$(foreach file,$(SRCS),$(eval $(call generate_rules,$(file))))

.PHONY: clean
clean:
	if exist $(BUILD_DIR) rmdir /s /q $(BUILD_DIR)
